# Generated by Django 3.0 on 2020-04-27 02:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.CharField(choices=[('여자', '여자'), ('남자', '남자')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='UserRibbon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid_ribbon', models.IntegerField()),
                ('current_ribbon', models.PositiveIntegerField()),
                ('when', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=60, unique=True)),
                ('job', models.CharField(blank=True, max_length=50)),
                ('company', models.CharField(blank=True, max_length=60)),
                ('school', models.CharField(blank=True, max_length=50)),
                ('birth', models.DateField(null=True)),
                ('region', models.CharField(blank=True, choices=[('서울', '서울'), ('경기', '경기'), ('인천', '인천'), ('대전', '대전'), ('충북', '충북'), ('충남', '충남'), ('강원', '강원'), ('부산', '부산'), ('경북', '경북'), ('경남', '경남'), ('대구', '대구'), ('울산', '울산'), ('광주', '광주'), ('전북', '전북'), ('전남', '전남'), ('제주', '제주')], max_length=30)),
                ('body_shape', models.CharField(blank=True, choices=[('보통체형', '보통체형'), ('통통한', '통통한'), ('살짝볼륨', '살짝볼륨'), ('글래머', '글래머'), ('마른', '마른'), ('슬림탄탄', '슬림탄탄')], max_length=50)),
                ('major', models.CharField(blank=True, max_length=50)),
                ('tall', models.PositiveIntegerField(blank=True, null=True)),
                ('personality', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('지적인', '지적인'), ('차분한', '차분한'), ('유머있는', '유머있는'), ('낙천적인', '낙천적인'), ('내향적인', '내향적인'), ('외향적인', '외향적인'), ('감성적인', '감성적인'), ('상냥한', '상냥한'), ('귀여운', '귀여운'), ('섹시한', '섹시한'), ('4차원인', '4차원인'), ('발랄한', '발랄한'), ('도도한', '도도한')], max_length=60)),
                ('blood_type', models.CharField(blank=True, choices=[('AB형', 'AB형'), ('A형', 'A형'), ('B형', 'B형'), ('O형', 'O형')], max_length=30)),
                ('drinking', models.CharField(blank=True, choices=[('가끔 마심', '가끔 마심'), ('어느정도 즐기는편', '어느정도 즐기는편'), ('술자리를 즐김', '술자리를 즐김'), ('마시지 않음', '마시지 않음')], max_length=60)),
                ('smoking', models.CharField(blank=True, choices=[('흡연', '흡연'), ('비흡연', '비흡연')], max_length=60)),
                ('religion', models.CharField(blank=True, choices=[('종교 없음', '종교 없음'), ('기독교', '기독교'), ('천주교', '천주교'), ('불교', '불교'), ('원불교', '원불교'), ('유교', '유교'), ('이슬람교', '이슬람교')], max_length=60)),
                ('introduce', models.CharField(blank=True, max_length=150)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='profile_images/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserIdealType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_from', models.PositiveIntegerField(blank=True, null=True)),
                ('age_to', models.PositiveIntegerField(blank=True, null=True)),
                ('region', models.CharField(blank=True, choices=[('서울', '서울'), ('경기', '경기'), ('인천', '인천'), ('대전', '대전'), ('충북', '충북'), ('충남', '충남'), ('강원', '강원'), ('부산', '부산'), ('경북', '경북'), ('경남', '경남'), ('대구', '대구'), ('울산', '울산'), ('광주', '광주'), ('전북', '전북'), ('전남', '전남'), ('제주', '제주')], max_length=60)),
                ('region2', models.CharField(blank=True, choices=[('서울', '서울'), ('경기', '경기'), ('인천', '인천'), ('대전', '대전'), ('충북', '충북'), ('충남', '충남'), ('강원', '강원'), ('부산', '부산'), ('경북', '경북'), ('경남', '경남'), ('대구', '대구'), ('울산', '울산'), ('광주', '광주'), ('전북', '전북'), ('전남', '전남'), ('제주', '제주')], max_length=60)),
                ('tall_from', models.PositiveIntegerField(blank=True)),
                ('tall_to', models.PositiveIntegerField(blank=True)),
                ('body_shape', models.CharField(blank=True, choices=[('보통체형', '보통체형'), ('통통한', '통통한'), ('살짝볼륨', '살짝볼륨'), ('글래머', '글래머'), ('마른', '마른'), ('슬림탄탄', '슬림탄탄')], max_length=60)),
                ('personality', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('지적인', '지적인'), ('차분한', '차분한'), ('유머있는', '유머있는'), ('낙천적인', '낙천적인'), ('내향적인', '내향적인'), ('외향적인', '외향적인'), ('감성적인', '감성적인'), ('상냥한', '상냥한'), ('귀여운', '귀여운'), ('섹시한', '섹시한'), ('4차원인', '4차원인'), ('발랄한', '발랄한'), ('도도한', '도도한')], max_length=60)),
                ('religion', models.CharField(blank=True, choices=[('종교 없음', '종교 없음'), ('기독교', '기독교'), ('천주교', '천주교'), ('불교', '불교'), ('원불교', '원불교'), ('유교', '유교'), ('이슬람교', '이슬람교')], max_length=60)),
                ('smoking', models.CharField(blank=True, choices=[('흡연', '흡연'), ('비흡연', '비흡연')], max_length=60)),
                ('drinking', models.CharField(blank=True, choices=[('가끔 마심', '가끔 마심'), ('어느정도 즐기는편', '어느정도 즐기는편'), ('술자리를 즐김', '술자리를 즐김'), ('마시지 않음', '마시지 않음')], max_length=60)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charm_tag', models.ManyToManyField(blank=True, related_name='my_charm_tags', to='members.Tag')),
                ('date_style_tag', models.ManyToManyField(blank=True, related_name='my_date_style_tags', to='members.Tag')),
                ('life_style_tag', models.ManyToManyField(blank=True, related_name='my_life_style_tags', to='members.Tag')),
                ('relationship_style_tag', models.ManyToManyField(blank=True, related_name='my_relationship_style_tags', to='members.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('story', models.CharField(blank=True, choices=[(1, '이상적인 첫 소개팅 장소'), (2, '내 외모중 가장 마음에 드는 곳은'), (3, '남들보다 이것 하나는 자신있어요')], max_length=60)),
                ('content', models.CharField(blank=True, max_length=60)),
                ('created', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Star',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('star', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_star_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_star_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pick', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_pick_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_pick_set', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='pick_users',
            field=models.ManyToManyField(related_name='send_me_pick_users', through='members.Pick', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='star_users',
            field=models.ManyToManyField(related_name='send_me_star_users', through='members.Star', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='tag',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.TagType'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
